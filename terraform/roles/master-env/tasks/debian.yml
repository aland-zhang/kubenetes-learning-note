---
## ZSH
- name: Installing zsh
  apt:
    name: zsh
  become: true
  register: result
  until: result is successful

- name: Querying oh-my-zsh exists
  stat:
    path: .oh-my-zsh
  register: _ohmyzsh_stat

- name: Installing oh-my-zsh
  shell: curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh
  when: not _ohmyzsh_stat['stat']['exists']

- name: Configuring zshrc
  template:
    src: dot.zshrc.j2
    dest: .zshrc

- name: Set default shell to zsh
  shell: usermod $USER -s /bin/zsh
  become: true

## kubernets

- name: Querying k3s exists
  stat:
    path: "/etc/rancher/k3s/k3s.yaml"
  register: _k3s_stat

- name: Set kubeconfig permission
  file:
    path: "/etc/rancher/k3s/k3s.yaml"
    owner: root
    group: "1000"
    mode: "0640"
  become: true
  when: _k3s_stat['stat']['exists']

- name: Copy kubeconfig
  shell: kubectl config view --raw > ~/.kube/config
  when: _k3s_stat['stat']['exists']

- name: Query helm installed
  command: helm version
  register: _helm_status
  ignore_errors: yes

- name: Install helm
  shell: curl -fsSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  when: _helm_status.rc != 0

- name: Setup helm
  shell: helm repo add stable https://kubernetes-charts.storage.googleapis.com/
  when: _helm_status.rc != 0

- name: Setup helm
  shell: helm repo update
  when: _helm_status.rc != 0

## Python
- name: Installing python3 pip
  apt:
    name: python3-pip
  become: true
  register: result
  until: result is successful

- name: Query ansible installed
  command: .local/bin/ansible-playbook --version
  register: _ansible_status
  ignore_errors: yes

- name: Installing ansible
  command: pip3 install ansible
  when: _ansible_status.rc != 0

## Deployment scripts
- name: Query primary node
  command:
    cmd: grep -q /opt/nfs /proc/mounts
    warn: no
  register: _primary_node_status
  failed_when: _primary_node_status.rc != 0 and _primary_node_status.rc != 1

- name: Synchronizing configurations
  synchronize:
    src: "{{ playbook_dir }}"
    dest: /opt/nfs/deploy
  when: _primary_node_status.rc == 0
